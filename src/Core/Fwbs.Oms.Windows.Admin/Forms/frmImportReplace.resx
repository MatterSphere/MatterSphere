<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="resourceLookup1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAD//+AAP/8AAP//+AD//wAA////A///AAA=
</value>
  </data>
</root>