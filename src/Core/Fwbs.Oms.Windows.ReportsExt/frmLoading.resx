<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        JiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJhkYGBomJiYm
        JiYmJiYmJiYmJiYmJiYmJiYmJiYmJg8TAgkJCBoZJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmGwoMDAsK
        CRooZigkIiIiIiIiIiIiIiIiIiYmJiYmJhkGBwcRDAoKCBowMDAwMDAwMDAwMDAwMDAfJiYmJiYmG52b
        ABwaEw0JGHE/PU05Oi81MzMtLTIrMB8mJiYmJiYPAJseFA8OCwkaQ0JBPTg5OjY1MzMtLTIwHyYmJiYm
        JgMBmwAaBg4LAiVaQ29BPX85OjY1NTMtLTEfJiYmJiYmJgMdHhUHDgoTIVtEWG9BPTxNOTYvNTMtMR8m
        JiYmJiYmEhIGBxYQFSFcXV5EWnBXPzxNOTovNTMsHyYmJiYmJiYmJwMVExcgdXRhXV5EWHBCPz5NOTov
        NSwfJiYmJiYmJiaeBJhHeHaAZHRhYl5bWkNCQT04OTovLB8mJiYmJiYmJimbhEd3eHaAZHRhXF5bRFhv
        QT08OTosHyYmJiYmJiYmngSaR4J3eHZjZHR0YV1bRFhvQT08TUgfJiYmJiYmJiYpm5ZHg4J3d3aBZHV0
        YV1bRFhvVz88SB8mJiYmJiYmJp4Elkd6g4WCd3iBgHV0YV1eclhDQj9IHyYmJiYmJiYmKZuWR4Z6g4WC
        d3h2gGR0YV1eRFpDQkgfJiYmJiYmJiaeBJZHh4Z6g4WCd3h2Y2R0YVxdW0RYMh8mJiYmJiYmJimbl0eJ
        h2BWUVFRU21tVG1tTk4/W0QyHyYmJiYmJiYmngSXR4mJOpFZX19jdniEhIKFin9dXjcfJiYmJiYmJiYp
        m5lHiIlLkW5fX19jY3Z4eIKLbWFdNx8mJiYmJiYmJpwEmUeIiEtrUm5uWVlfX2NjeIJtdGEtHyYmJiYm
        JiYmKZuZRoiISZBSbm5VVW5uWVlfd21kdEkfJiYmJiYmJiacBZlGiIhJfWpsbGxsbFJVbll4bWNkSx8m
        JiYmJiYmJimbmY6IiEs4aUx9a2tra2tqUoBUdmM1IyYmJiYmJiYmnAWZaIiIUEk3NzdLS0tLOzs6T1d3
        djsnJiYmJiYmJiYpm5loiIiIiIiIiIiJiYeHhnqDhYJ3OigmJiYmJiYmJpwPmWiIiIiIiIiIiIiJiYeH
        hnqDhYJzRSYmJiYmJiYmKZuZaI6ORkZHR0eNjJJnfHuLZYR5gGIlJiYmJiYmJiYmD5mZmZeWlZWUk5GQ
        j31+aUpKNC4qQCUmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJv///////////D////AP
        ///wAAAH4AAAB+AAAAfgAAAH4AAAB/AAAAfwAAAH+AAAB/gAAAf4AAAH+AAAB/gAAAf4AAAH+AAAB/gA
        AAf4AAAH+AAAB/gAAAf4AAAH+AAAB/gAAAf4AAAH+AAAB/gAAAf4AAAH+AAAB/wAAAf/////KAAAADAA
        AABgAAAAAQAIAAAAAACACgAAAAAAAAAAAAAAAAAAAAAAAPv6+gAvIBoAz5+HAL2xqwCHgX4Ak42KAOHZ
        1QD89PAA//38AM2QcADpp4QAqYBpAOy+pQDasZsA88u1APXYyAC2oZUA+ePXAKKXkQDUycMA8ufhAMW+
        ugA+LSMAiXBhAPPu6wCTgncA/PDoAHpmVwBlWE4AgHVtAP359gCOfW4ARjksAOrp6ACXkHYAEhEHAPz8
        +wAXGAwAFhcMACAhFgCbqooAip58ABIaEAAcJBoAAAAAAExjTAA6SDoAICUgADluOgBFfEYAQHNBAEqE
        SwBanFsAY5hkADRnNgA1aDcAN2o5ADhrOgA6bTwAVJtXAD1xPwBFfUgAUoxVAEp9TABgnWMAXZhgAFqT
        XQBWjVkAYp1lAF2UYABln2gAZJ5nAGehagBajFwAaaJsAGylbwBonGoAcah0AHeuegCDsYUA3PLdANfs
        2ABBdkQATYJRAGGhZQBRhVQAX5pjAGGaZQBgmGQAVYdYAF+WYwBjmWYAZZtpAGSZZwBro28AaZ1tAGuf
        bwBzqncAdat5AHCjcwBvonIAerF+AIK6hgB/toMAfbKBAHSldwBzpHYAd6h6AICzgwCFuYkAg7aGAH6t
        gQB9rIAAgK+DAH2rgACEsocAireNAIm1jACMt48Aj7qSAI65kQCRvJQAkbqUAJjBmwCWv5kAm8OeAJrC
        nQCjy6YAncSgAFhnWQC/3sEAyuXMAOX15gDs++0AZKRpAG2mcgBsn3EAbaBxAHiufQBxpHUAdad5AHmp
        fQB7q38Air2OAI6/kgCHtYsAhbOJAJrMngCSvZYAk76XAJrGngCw2LQAqM6rAKbMqQC12LgAs9a2ALDS
        swC32boAu9u+AMLhxQBpq3AAX5plAGelbgBgmWYAksOXAJXFmgCey6MApdOqAKzWsQCp064AoMekAJ7F
        ogCs0LAAyebMAMrmzQDM6M8A4PLiAGyqdQBxrnkAdbN+AMXjyQDH5MsAyeXNAHazgwB5tYYAfbmMAIO+
        kgCGwJYAiMKZAIrDmwD9//8A////AP39/QD39/cA8fHxAOzs7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCwsLCwsLCwsLCwsLCwsLCwsLCws
        LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCws
        LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCws
        LCwsLCwsLCwsLBIXGxsXEiwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwDFwsC
        CgoJCxcQLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLAMLDQ4ODgwMCgkLECwsLCws
        LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLBcMDxEREQ8ODAoJGyAqKioqKioqKioqKioqKioq
        KioqKioqKioqLCwsLCwsLCwsEBARGgceBxoRDwwKCxs2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjYlLCws
        LCwsLCwsGRMHCL+/vwgHEQ4MCRs1WkJCQ0M+PlVTUz8/Pz89PTFSUjIyMjYlLCwsLCwsLCwsGxTAv7+/
        JwEWIBsMChuOjWuMaotjiYhfTExcXVtYWEVFRUJCMjclLCwsLCwsLCwsGxi/v7++JxwTFBEOChtwjo1r
        jGmLY2SIYF9MXF1bWFhaRUVCUjgmLCwsLCwsLCwsGQa/v74AARW/HhEOAhdxb46Na4xpaotkiGBfTFxc
        XVhYWkFFPTkmLCwsLCwsLCwsAwO/v7++Fhi/BxEOCx9PcW9wjo1raWqLY4lgX19MXF1bWFpFPzkmLCws
        LCwsLCwsLBkhv7+/ICQIGg8NFymSc3Fxb46Na4xpi2NkiF9fTFxcXVhYMzkmLCwsLCwsLCwsLBUQIb+/
        HQgHEQwLInSRknNPcW9wjY2MaWpjZIlgX0xMXFtbMzkmLCwsLCwsLCwsLCwVGQMGGBQTEBcid3Z0dJFz
        T3FvcI2Na4xqi2OJiF9fTFxdUzkmLCwsLCwsLCwsLCwsLBAfGxsfIiiVlHd4dnWRkk9xb3COjWuMaYtj
        ZIhgX0xcUzkmLCwsLCwsLCwsLCwsLC+/v7pQfnt7fJR3eHZ0dZJzT3Fvjo1rjGlqY2SJYF9MVTkmLCws
        LCwsLCwsLCwsLMEEBLpQq317e3yVeXd2dHWSc09xb3COjYyMaotkiWBfPjkmLCwsLCwsLCwsLCwsLC+/
        v7pQqquAfnt8lXl3eHZ1kZJPcW9wjo1rjGmLY2RgQzkmLCwsLCwsLCwsLCwsLMEFBbpQf6qqgH17fJWU
        eXh2dHWSc09xb3KNa4xpi2NkQzkmLCwsLCwsLCwsLCwsLC+/v7pQmX+qqqt9fnt8lXp3dnR1knNPcW9y
        jY1rjGqLQjkmLCwsLCwsLCwsLCwsLMEFBbpQmJl/f6qrfX57fJWUd3Z2dJGST3Fvb46Na4xqQjkmLCws
        LCwsLCwsLCwsLC+/v7pQrJiZmX+qq4B9e3uVlHd4dnSRknNPcW9yjWuMQTkmLCwsLCwsLCwsLCwsLMMS
        ErpQrKyYmJl/qqqAfX57fJV5eHZ0dZGST3FvcI2NVjomLCwsLCwsLCwsLCwsLC+/v7pQnJysmJiZf3+q
        gIB+e3yVeXd4dnWRkk9PcXCOQDAmLCwsLCwsLCwsLCwsLMISErpQm5ycrKyYmZl/qquAfXt8lZR3eHZ0
        dZJzT3FvRzAmLCwsLCwsLCwsLCwsLC+/v7pQmpucnKysmJiZf6qqgH1+e5WVend2dHWSc09xRjomLCws
        LCwsLCwsLCwsLMIEBLpQnZqbm5ycrJiYmX9/qqt9fnt8lXl3dnZ1kZJPSDwmLCwsLCwsLCwsLCwsLC+/
        v7pQnZ2aa1tFRVijo6Ojo6Ojo6Ojo6Nbo1hYTHWSSjwmLCwsLCwsLCwsLCwsLMIEBLpQnp6dSWGKaG50
        kKSWpn+YqaiXl5eXl5eXoXR1hzwmLCwsLCwsLCwsLCwsLC+/v7pQgp6eU01himxudJCklqZ/mKmol5eX
        l5eXoXh2TTImLCwsLCwsLCwsLCwsLMIEBLtQgoKeU15NYmVsbY+QpZammaeoqJeXl5eXoXd4YVImLCws
        LCwsLCwsLCwsLC+/v7tQn4KCP0pLTWJlbG2PlaWWppmpqJeXl5eXoZR6YlImLCwsLCwsLCwsLCwsLMIE
        BLywn5+CP0ZKh01iaG5tj6Slk3+ZqaiXl5eXoXyVTjEmLCwsLCwsLCwsLCwsLC+/v7ywtJ+fP0RGSodh
        imhudJCklqZ/mKmol5eXo3t8ZTEmLCwsLCwsLCwsLCwsLMEEBL2wtLSfP1ZESF6HYYpobnSQpJamf6ep
        qJeXo317ZT0mLCwsLCwsLCwsLCwsLC+/v72EtbW0P1ZXR0heTWJlbG2PkKWWpn+nqaiXo4B9ZzMmLCws
        LCwsLCwsLCwsLMEFBb2EtoO1P1ZWV0ZIS01iZWxtj5CllqaZqaiXo6qrZ1MjLCwsLCwsLCwsLCwsLC+/
        v72Erq6tU1ZWVkRGSodNYmhsbY+kpZOmmamoW3+qZ1MrLCwsLCwsLCwsLCwsLMEFBb2Frq6uVT8/PVNT
        U1NTU1NTU1NTU1NTPkNaSpl/ZlUuLCwsLCwsLCwsLCwsLC+/v72Frq6uroODtbS0n5+CgoKenp2dmpuc
        nKysrJiZZkkuLCwsLCwsLCwsLCwsLMESEr2Frq6urq6trbW0tJ+fn4KCgp6enZqbm5ycrKyYZmktLCws
        LCwsLCwsLCwsLC+/v72FhYSEhLBQUFGvrq6urq6urq6urq6fnpqomH+mpG6BLCwsLCwsLCwsLCwsLCwS
        Er29vby6urm4t7OysbGxsbGxsbGxsbGgooZUQDQ0O1mBLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCws
        LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCws
        LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCws
        LCz///////8AAP///////wAA////////AAD/A/////8AAPwA/////wAA+AB/////AAD4AAAAAB8AAPAA
        AAAAHwAA8AAAAAAfAADwAAAAAB8AAPAAAAAAHwAA8AAAAAAfAADwAAAAAB8AAPgAAAAAHwAA+AAAAAAf
        AAD8AAAAAB8AAP8AAAAAHwAA/wAAAAAfAAD/AAAAAB8AAP8AAAAAHwAA/wAAAAAfAAD/AAAAAB8AAP8A
        AAAAHwAA/wAAAAAfAAD/AAAAAB8AAP8AAAAAHwAA/wAAAAAfAAD/AAAAAB8AAP8AAAAAHwAA/wAAAAAf
        AAD/AAAAAB8AAP8AAAAAHwAA/wAAAAAfAAD/AAAAAB8AAP8AAAAAHwAA/wAAAAAfAAD/AAAAAB8AAP8A
        AAAAHwAA/wAAAAAfAAD/AAAAAB8AAP8AAAAAHwAA/wAAAAAfAAD/AAAAAB8AAP8AAAAAHwAA/4AAAAAf
        AAD///////8AAP///////wAA////////AAA=
</value>
  </data>
</root>