<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picShow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAA5pJREFUWEfllu1PzWEYx/urvDbvvDTz2ryQkczExqqtVmPKY2UiD9FZI890HJyI
        akUKoVKeiohQHpLH9nV97t+522HWOr+VXri2a79797nP/f1e3+vh90ubDqsovq4NOSeUnr7HPUtLm1Ve
        flNnt3UrcWRmDOCCgqgqzvXqZNewoq+kMwPSqWfS6cdSZeOQSiP3tSXn4vQT4dJIbacefJHzzp/SXfM7
        Sd70QTr2JCBSsLNB2XmnpocIkTf2vZW3kfGAxL2v0vGnUo1FjxoNnwMiF15IFbc0PSQAr4r3a8xAvUHg
        soHgSB/plqp7pKOPAiIt36XG4YAEBDIXFoUnsTfS4aRNwtcrA4j2B6D1BkQNUAtnjRBeOyhd/yHFjAzp
        yFy+PxwBX2ztYwFox3upy8gQ+bFei/65dPWTSf7G9uw373UjwZN0cCZv6/lwKuw+0KZLdjkX9Vi+Y3YZ
        kgNOxPUfpWujgeStJlGbqYOzbv4WqIB6BJK79GBqBPgT8tdb7QFw3IAbhoLcxuxJwbHfZmC3DfSeeWfC
        WbMHGdQ70v7GzYxV6SunTgLw6qY+tVqURHPYbqbYTvQFBIgccMCsFGT1J2sI56zZ6zCHBGlKmQAKUP1E
        DIGqLovkYSB93PaQGQCAALWy0MuEs2bPkyAVoRTA6WkuoNcZMrQZERGZcZoAN1FkvJyzZg8lSEndwKjr
        hJQIYMx3oqYIaS2GDvI3Wl7JsY/+tbkVvaxOnbNmz/7qzhy51u26IGUCvFzo4ysWNaD0+98IELGJIqtJ
        Ny9wiKAAKhVtj4dTAOPlcuh+UM1XrKX8yIWATwF5R3qry9+MPUZ4aHCspCSqXbFB1Vi4pILeh4jvAGQ2
        YZzk78yT7fWX7xNDKDSBaPS8Nm6ucyQYQLQl4HSBVyG5BSFi7ykHXrb3hhtAKYMrtkCjF5aqt7xLEMjO
        znbfAaSDTrhsw4mU8DpGBUjg1ATePjyqopJ4OHCA1bLESneexvcVqbCwUJWbKhWJVCs3o0r5+bVutDLd
        SIWfhhAi33wzcCZU3h14fJEDHyubo+iK+VqdsUx71q13l+F8fpFX78mfZDvW1LqBEyrnE+AmP+B3c+eq
        JnOxqvIK3MWJY2meyGSeODp1S5bdR+7BK8quzsw3nrc/ZU+O3IOHimoq9qfsf4t85sH/u8gxR2CSgptR
        cCwra+3sgWPFxcVuwMwKuDfmO4AA/3Nwb7xgAJ4V8NmxtLRfrvn6Ezw4d/MAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="resourceLookup1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>223, 16</value>
  </metadata>
  <metadata name="timSearch.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timDisplay.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>118, 17</value>
  </metadata>
</root>