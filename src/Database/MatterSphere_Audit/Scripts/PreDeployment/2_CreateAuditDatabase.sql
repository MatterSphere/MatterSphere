
DECLARE @DBNAME SYSNAME
DECLARE @FILE_DATA NVARCHAR ( 260 )
DECLARE @FILE_LOG NVARCHAR ( 260 )
DECLARE @COLLATION sysname = (SELECT collation_name FROM sys.databases WHERE name = DB_NAME ())

SET @DBNAME = DB_NAME () + '_Audit'
	 
SELECT TOP 1 @FILE_DATA = PHYSICAL_NAME FROM SYS.DATABASE_FILES WHERE TYPE = 0
SELECT TOP 1 @FILE_LOG = PHYSICAL_NAME FROM SYS.DATABASE_FILES WHERE TYPE = 1

IF ISNULL ( @FILE_DATA , '' ) != ''
BEGIN
	SET @FILE_DATA = REVERSE ( SUBSTRING ( REVERSE ( @FILE_DATA ) , CHARINDEX ( '\' , REVERSE ( @FILE_DATA ) ), LEN ( @FILE_DATA ) ) ) + @DBNAME + '.mdf'
END 
IF ISNULL ( @FILE_LOG , '' ) != ''
BEGIN
	SET @FILE_LOG = REVERSE ( SUBSTRING ( REVERSE ( @FILE_LOG ) , CHARINDEX ( '\' , REVERSE ( @FILE_LOG ) ), LEN ( @FILE_LOG ) ) ) + @DBNAME + '.ldf'
END 

IF NOT EXISTS ( SELECT NAME FROM SYS.DATABASES WHERE NAME = @DBNAME )
BEGIN
	PRINT 'Creating Database : ' + @DBNAME
	DECLARE @SQL NVARCHAR ( MAX ) 
	SET @SQL = 'CREATE DATABASE ' + QUOTENAME ( @DBNAME ) + ' ON  PRIMARY
				( NAME = '''+@DbName +''', FILENAME = ''' + @FILE_DATA + ''' , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
				LOG ON 
				( NAME = '''+@DbName +'_log'', FILENAME = ''' + @FILE_LOG + ''' , SIZE = 1024KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)
				COLLATE ' + @COLLATION + ' WITH TRUSTWORTHY ON'
	EXEC sp_executesql  @SQL  
	PRINT 'Database created: ' + @DBNAME
END
ELSE
BEGIN
	PRINT 'Database already exists'
	RETURN
END