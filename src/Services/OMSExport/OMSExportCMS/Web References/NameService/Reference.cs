//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.237.
// 
#pragma warning disable 1591

namespace FWBS.OMS.OMSEXPORT.NameService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NameServiceSoap", Namespace="http://cmsopen.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NameDataBase))]
    public partial class NameService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private CioSoapHeader cioSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitializeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitializeDataCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadSingleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NameService() {
            this.Url = "http://vpc-aderant/CMSNet/FileOpening/FileOpeningWS/NameService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public CioSoapHeader CioSoapHeaderValue {
            get {
                return this.cioSoapHeaderValueField;
            }
            set {
                this.cioSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateCompletedEventHandler CreateCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event InitializeCompletedEventHandler InitializeCompleted;
        
        /// <remarks/>
        public event InitializeDataCreateCompletedEventHandler InitializeDataCreateCompleted;
        
        /// <remarks/>
        public event GetDataCreateCompletedEventHandler GetDataCreateCompleted;
        
        /// <remarks/>
        public event GetDataUpdateCompletedEventHandler GetDataUpdateCompleted;
        
        /// <remarks/>
        public event ReadSingleCompletedEventHandler ReadSingleCompleted;
        
        /// <remarks/>
        public event ReadCompletedEventHandler ReadCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CioSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cmsopen.com/Create", RequestNamespace="http://cmsopen.com/", ResponseNamespace="http://cmsopen.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Create(NameDataCreate data) {
            object[] results = this.Invoke("Create", new object[] {
                        data});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreate(NameDataCreate data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Create", new object[] {
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAsync(NameDataCreate data) {
            this.CreateAsync(data, null);
        }
        
        /// <remarks/>
        public void CreateAsync(NameDataCreate data, object userState) {
            if ((this.CreateOperationCompleted == null)) {
                this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
            }
            this.InvokeAsync("Create", new object[] {
                        data}, this.CreateOperationCompleted, userState);
        }
        
        private void OnCreateOperationCompleted(object arg) {
            if ((this.CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CioSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cmsopen.com/Update", RequestNamespace="http://cmsopen.com/", ResponseNamespace="http://cmsopen.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(int nameUno, NameDataUpdate data) {
            this.Invoke("Update", new object[] {
                        nameUno,
                        data});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdate(int nameUno, NameDataUpdate data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Update", new object[] {
                        nameUno,
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateAsync(int nameUno, NameDataUpdate data) {
            this.UpdateAsync(nameUno, data, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(int nameUno, NameDataUpdate data, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        nameUno,
                        data}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CioSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cmsopen.com/Delete", RequestNamespace="http://cmsopen.com/", ResponseNamespace="http://cmsopen.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete(int nameUno, bool deleteChildren) {
            this.Invoke("Delete", new object[] {
                        nameUno,
                        deleteChildren});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDelete(int nameUno, bool deleteChildren, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Delete", new object[] {
                        nameUno,
                        deleteChildren}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteAsync(int nameUno, bool deleteChildren) {
            this.DeleteAsync(nameUno, deleteChildren, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(int nameUno, bool deleteChildren, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        nameUno,
                        deleteChildren}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CioSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cmsopen.com/Initialize", RequestNamespace="http://cmsopen.com/", ResponseNamespace="http://cmsopen.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NameData Initialize() {
            object[] results = this.Invoke("Initialize", new object[0]);
            return ((NameData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInitialize(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Initialize", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public NameData EndInitialize(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((NameData)(results[0]));
        }
        
        /// <remarks/>
        public void InitializeAsync() {
            this.InitializeAsync(null);
        }
        
        /// <remarks/>
        public void InitializeAsync(object userState) {
            if ((this.InitializeOperationCompleted == null)) {
                this.InitializeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitializeOperationCompleted);
            }
            this.InvokeAsync("Initialize", new object[0], this.InitializeOperationCompleted, userState);
        }
        
        private void OnInitializeOperationCompleted(object arg) {
            if ((this.InitializeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitializeCompleted(this, new InitializeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CioSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cmsopen.com/InitializeDataCreate", RequestNamespace="http://cmsopen.com/", ResponseNamespace="http://cmsopen.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NameDataCreate InitializeDataCreate() {
            object[] results = this.Invoke("InitializeDataCreate", new object[0]);
            return ((NameDataCreate)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInitializeDataCreate(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InitializeDataCreate", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public NameDataCreate EndInitializeDataCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((NameDataCreate)(results[0]));
        }
        
        /// <remarks/>
        public void InitializeDataCreateAsync() {
            this.InitializeDataCreateAsync(null);
        }
        
        /// <remarks/>
        public void InitializeDataCreateAsync(object userState) {
            if ((this.InitializeDataCreateOperationCompleted == null)) {
                this.InitializeDataCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitializeDataCreateOperationCompleted);
            }
            this.InvokeAsync("InitializeDataCreate", new object[0], this.InitializeDataCreateOperationCompleted, userState);
        }
        
        private void OnInitializeDataCreateOperationCompleted(object arg) {
            if ((this.InitializeDataCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitializeDataCreateCompleted(this, new InitializeDataCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CioSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cmsopen.com/GetDataCreate", RequestNamespace="http://cmsopen.com/", ResponseNamespace="http://cmsopen.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NameDataCreate GetDataCreate(NameData data) {
            object[] results = this.Invoke("GetDataCreate", new object[] {
                        data});
            return ((NameDataCreate)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDataCreate(NameData data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDataCreate", new object[] {
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public NameDataCreate EndGetDataCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((NameDataCreate)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataCreateAsync(NameData data) {
            this.GetDataCreateAsync(data, null);
        }
        
        /// <remarks/>
        public void GetDataCreateAsync(NameData data, object userState) {
            if ((this.GetDataCreateOperationCompleted == null)) {
                this.GetDataCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataCreateOperationCompleted);
            }
            this.InvokeAsync("GetDataCreate", new object[] {
                        data}, this.GetDataCreateOperationCompleted, userState);
        }
        
        private void OnGetDataCreateOperationCompleted(object arg) {
            if ((this.GetDataCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCreateCompleted(this, new GetDataCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CioSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cmsopen.com/GetDataUpdate", RequestNamespace="http://cmsopen.com/", ResponseNamespace="http://cmsopen.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NameDataUpdate GetDataUpdate(NameData data) {
            object[] results = this.Invoke("GetDataUpdate", new object[] {
                        data});
            return ((NameDataUpdate)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDataUpdate(NameData data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDataUpdate", new object[] {
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public NameDataUpdate EndGetDataUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((NameDataUpdate)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataUpdateAsync(NameData data) {
            this.GetDataUpdateAsync(data, null);
        }
        
        /// <remarks/>
        public void GetDataUpdateAsync(NameData data, object userState) {
            if ((this.GetDataUpdateOperationCompleted == null)) {
                this.GetDataUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataUpdateOperationCompleted);
            }
            this.InvokeAsync("GetDataUpdate", new object[] {
                        data}, this.GetDataUpdateOperationCompleted, userState);
        }
        
        private void OnGetDataUpdateOperationCompleted(object arg) {
            if ((this.GetDataUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataUpdateCompleted(this, new GetDataUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CioSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cmsopen.com/ReadSingle", RequestNamespace="http://cmsopen.com/", ResponseNamespace="http://cmsopen.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NameData ReadSingle(int nameUno) {
            object[] results = this.Invoke("ReadSingle", new object[] {
                        nameUno});
            return ((NameData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReadSingle(int nameUno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReadSingle", new object[] {
                        nameUno}, callback, asyncState);
        }
        
        /// <remarks/>
        public NameData EndReadSingle(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((NameData)(results[0]));
        }
        
        /// <remarks/>
        public void ReadSingleAsync(int nameUno) {
            this.ReadSingleAsync(nameUno, null);
        }
        
        /// <remarks/>
        public void ReadSingleAsync(int nameUno, object userState) {
            if ((this.ReadSingleOperationCompleted == null)) {
                this.ReadSingleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadSingleOperationCompleted);
            }
            this.InvokeAsync("ReadSingle", new object[] {
                        nameUno}, this.ReadSingleOperationCompleted, userState);
        }
        
        private void OnReadSingleOperationCompleted(object arg) {
            if ((this.ReadSingleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadSingleCompleted(this, new ReadSingleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CioSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cmsopen.com/Read", RequestNamespace="http://cmsopen.com/", ResponseNamespace="http://cmsopen.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NameData[] Read(string filter) {
            object[] results = this.Invoke("Read", new object[] {
                        filter});
            return ((NameData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRead(string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Read", new object[] {
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public NameData[] EndRead(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((NameData[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadAsync(string filter) {
            this.ReadAsync(filter, null);
        }
        
        /// <remarks/>
        public void ReadAsync(string filter, object userState) {
            if ((this.ReadOperationCompleted == null)) {
                this.ReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadOperationCompleted);
            }
            this.InvokeAsync("Read", new object[] {
                        filter}, this.ReadOperationCompleted, userState);
        }
        
        private void OnReadOperationCompleted(object arg) {
            if ((this.ReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadCompleted(this, new ReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cmsopen.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://cmsopen.com/", IsNullable=false)]
    public partial class CioSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string localeField;
        
        private string formsTicketField;
        
        private string sessionField;
        
        private bool useOfficeXtensionField;
        
        private string satelliteDbTargetField;
        
        private bool satelliteDbOnlyField;
        
        /// <remarks/>
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
        /// <remarks/>
        public string formsTicket {
            get {
                return this.formsTicketField;
            }
            set {
                this.formsTicketField = value;
            }
        }
        
        /// <remarks/>
        public string session {
            get {
                return this.sessionField;
            }
            set {
                this.sessionField = value;
            }
        }
        
        /// <remarks/>
        public bool useOfficeXtension {
            get {
                return this.useOfficeXtensionField;
            }
            set {
                this.useOfficeXtensionField = value;
            }
        }
        
        /// <remarks/>
        public string satelliteDbTarget {
            get {
                return this.satelliteDbTargetField;
            }
            set {
                this.satelliteDbTargetField = value;
            }
        }
        
        /// <remarks/>
        public bool satelliteDbOnly {
            get {
                return this.satelliteDbOnlyField;
            }
            set {
                this.satelliteDbOnlyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NameData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NameDataUpdate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NameDataCreate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cmsopen.com/")]
    public partial class NameDataBase {
        
        private int addressUnoField;
        
        private string commentTextField;
        
        private string dbNumField;
        
        private string firstNameField;
        
        private string inactiveField;
        
        private string internetAddrField;
        
        private string languageCodeField;
        
        private string lastNameField;
        
        private string middleNameField;
        
        private string nameField;
        
        private string nameClassCodeField;
        
        private string nameSortField;
        
        private System.DateTime birthDateField;
        
        private string carPhoneField;
        
        private string cellularPhoneField;
        
        private string countryCode1Field;
        
        private string countryCode2Field;
        
        private string countryCode3Field;
        
        private string domicileField;
        
        private string familyTextField;
        
        private string genderField;
        
        private string maritalStatusField;
        
        private string miscTextField;
        
        private int numChildField;
        
        private string occupationField;
        
        private string residentField;
        
        private string salutationField;
        
        private string ssnField;
        
        private string suffixField;
        
        private string titleField;
        
        /// <remarks/>
        public int AddressUno {
            get {
                return this.addressUnoField;
            }
            set {
                this.addressUnoField = value;
            }
        }
        
        /// <remarks/>
        public string CommentText {
            get {
                return this.commentTextField;
            }
            set {
                this.commentTextField = value;
            }
        }
        
        /// <remarks/>
        public string DbNum {
            get {
                return this.dbNumField;
            }
            set {
                this.dbNumField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string Inactive {
            get {
                return this.inactiveField;
            }
            set {
                this.inactiveField = value;
            }
        }
        
        /// <remarks/>
        public string InternetAddr {
            get {
                return this.internetAddrField;
            }
            set {
                this.internetAddrField = value;
            }
        }
        
        /// <remarks/>
        public string LanguageCode {
            get {
                return this.languageCodeField;
            }
            set {
                this.languageCodeField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string NameClassCode {
            get {
                return this.nameClassCodeField;
            }
            set {
                this.nameClassCodeField = value;
            }
        }
        
        /// <remarks/>
        public string NameSort {
            get {
                return this.nameSortField;
            }
            set {
                this.nameSortField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BirthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        public string CarPhone {
            get {
                return this.carPhoneField;
            }
            set {
                this.carPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string CellularPhone {
            get {
                return this.cellularPhoneField;
            }
            set {
                this.cellularPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode1 {
            get {
                return this.countryCode1Field;
            }
            set {
                this.countryCode1Field = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode2 {
            get {
                return this.countryCode2Field;
            }
            set {
                this.countryCode2Field = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode3 {
            get {
                return this.countryCode3Field;
            }
            set {
                this.countryCode3Field = value;
            }
        }
        
        /// <remarks/>
        public string Domicile {
            get {
                return this.domicileField;
            }
            set {
                this.domicileField = value;
            }
        }
        
        /// <remarks/>
        public string FamilyText {
            get {
                return this.familyTextField;
            }
            set {
                this.familyTextField = value;
            }
        }
        
        /// <remarks/>
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public string MaritalStatus {
            get {
                return this.maritalStatusField;
            }
            set {
                this.maritalStatusField = value;
            }
        }
        
        /// <remarks/>
        public string MiscText {
            get {
                return this.miscTextField;
            }
            set {
                this.miscTextField = value;
            }
        }
        
        /// <remarks/>
        public int NumChild {
            get {
                return this.numChildField;
            }
            set {
                this.numChildField = value;
            }
        }
        
        /// <remarks/>
        public string Occupation {
            get {
                return this.occupationField;
            }
            set {
                this.occupationField = value;
            }
        }
        
        /// <remarks/>
        public string Resident {
            get {
                return this.residentField;
            }
            set {
                this.residentField = value;
            }
        }
        
        /// <remarks/>
        public string Salutation {
            get {
                return this.salutationField;
            }
            set {
                this.salutationField = value;
            }
        }
        
        /// <remarks/>
        public string Ssn {
            get {
                return this.ssnField;
            }
            set {
                this.ssnField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cmsopen.com/")]
    public partial class NameData : NameDataBase {
        
        private System.DateTime lastModifiedField;
        
        private int nameUnoField;
        
        private string nameTypeField;
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        public int NameUno {
            get {
                return this.nameUnoField;
            }
            set {
                this.nameUnoField = value;
            }
        }
        
        /// <remarks/>
        public string NameType {
            get {
                return this.nameTypeField;
            }
            set {
                this.nameTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cmsopen.com/")]
    public partial class NameDataUpdate : NameDataBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cmsopen.com/")]
    public partial class NameDataCreate : NameDataBase {
        
        private string nameTypeField;
        
        /// <remarks/>
        public string NameType {
            get {
                return this.nameTypeField;
            }
            set {
                this.nameTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InitializeCompletedEventHandler(object sender, InitializeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitializeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitializeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NameData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NameData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InitializeDataCreateCompletedEventHandler(object sender, InitializeDataCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitializeDataCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitializeDataCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NameDataCreate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NameDataCreate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataCreateCompletedEventHandler(object sender, GetDataCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NameDataCreate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NameDataCreate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataUpdateCompletedEventHandler(object sender, GetDataUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NameDataUpdate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NameDataUpdate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReadSingleCompletedEventHandler(object sender, ReadSingleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadSingleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadSingleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NameData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NameData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReadCompletedEventHandler(object sender, ReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NameData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NameData[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591