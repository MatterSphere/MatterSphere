IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetE3EMatterExportPostProcessesXML]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetE3EMatterExportPostProcessesXML]
GO

CREATE FUNCTION [dbo].[GetE3EMatterExportPostProcessesXML] ( @FILEID BIGINT , @MATTINDEX INT , @SPECIAL NVARCHAR ( 15 ) )
RETURNS NVARCHAR ( MAX ) AS
BEGIN
DECLARE @XML NVARCHAR ( MAX ) 

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetE3EMatterExportPostProcessesXML_CUSTOM]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
	SELECT @XML = [dbo].[GetE3EMatterExportPostProcessesXML_CUSTOM] ( @FILEID , @MATTINDEX , @SPECIAL ) 
	RETURN @XML
END 



DECLARE @CLID			BIGINT
DECLARE @MATTER			NVARCHAR ( 10 ) 
DECLARE @CLIENT			NVARCHAR ( 10 )
DECLARE @CLNAME			NVARCHAR ( 128 ) 
DECLARE @DESCRIPTION	NVARCHAR ( 128 ) 
DECLARE @SEARCHREASON	NVARCHAR ( 64 ) 
DECLARE @SUBMITTER		NVARCHAR ( 50 ) 

DECLARE @IDS			NVARCHAR ( MAX ) 

SELECT
	@MATTER				= @MATTINDEX 
	, @CLID				= DBFILE.CLID
	, @CLIENT			= CLEXTID
	, @DESCRIPTION		= CONVERT ( NVARCHAR ( 128 ) , 'Conflict Search for ' + CLNAME + ':' + FILEDESC )
	, @SEARCHREASON		= CASE ISNUMERIC ( DBFILE.FILEEXTLINKID ) --IF THE FILEEXTLINKID IS NUMERIC, THEN THE MATTER HAS ALREADY GONE TO 3E
		WHEN 0 THEN 'NewMatterExistingClient'
		WHEN 1 THEN 'NewPartyExistingMatter'
	END 
	, @SUBMITTER = CASE ISNULL ( DBFILE.FILEEXTLINKID , 0 ) --IF -1, THEN THE MATTER HAS NOT GONE ACROSS ANYWAY.  IF 0 THEN THE MATTER IS NOT EXPORTER YET, SO GET THE USRADID FROM THE DBFILE.CREATED USER.  OTHERWISE SEND THROUGH THE SUSER_SNAME FROM SQL - ASSUMES WINDOWS AUTHENTICATION.
		WHEN -1 THEN 'ERROR'
		WHEN 0 THEN DBUSER.USRADID 
		ELSE SUSER_SNAME ()
	END
FROM
	DBFILE
INNER JOIN 
	DBCLIENT ON DBFILE.CLID = DBCLIENT.CLID
INNER JOIN 
	DBUSER ON DBUSER.USRID = DBFILE.CREATEDBY
WHERE 
	DBFILE.FILEID = @FILEID AND
	ISNULL ( DBCLIENT.CLEXTID , 0 ) > 0

--IF THIS IS THE FIRST MATTER THAT IS GOING TO BE SENT TO 3E, CHANGE THE SEARCH REASON TO 'NewClientNewMatter'
IF ( SELECT COUNT ( * ) FROM DBFILE WHERE FILEEXTLINKID IS NOT NULL AND CLID = @CLID  ) = 0
BEGIN
	SET @SEARCHREASON = 'NewClientNewMatter'
END

SET @IDS				= ''
--TODO: DANIELLE TO REPORT - WHAT IF THE ASSOCIATES CONTACTS HAVENT ALREADY BEEN EXPORTED?  

IF ( SELECT COUNT ( DBCONTACT.CONTID ) FROM DBASSOCIATES INNER JOIN DBCONTACT ON DBASSOCIATES.CONTID = DBCONTACT.CONTID INNER JOIN DBASSOCIATETYPE ON DBASSOCIATETYPE.TYPECODE = DBASSOCIATES.ASSOCTYPE WHERE FILEID = @FILEID AND ASSOCACTIVE = 1 AND ISNULL ( CONTEXTID , 0 ) = 0 AND ASSOCEXTTXTID IS NULL AND DBASSOCIATETYPE.TYPEACCCODE IS NOT NULL	) > 0
BEGIN
	SET @XML = ''
END 
ELSE
BEGIN
SET @XML = '
<processes>
 <process expectedResult = "Interface" expectedResultType = "String" keyValue = "CftNewBizRequest" matterSphereUpdate = "UPDATE DBASSOCIATES SET ASSOCEXTTXTID = @PROCESSRESULT WHERE ASSOCID IN ( %IDS% ) " getProcessResult = "True" >
  <ns0:CftWFNewBizIntake xmlns:transerv="http://elite.com/schemas/transactionservice" xmlns:ns0="http://elite.com/schemas/transaction/process/write/CftWFNewBizIntake" xmlns:ns1="http://elite.com/schemas/appobjectbase" xmlns:NBI="http://elite.com/schemas/transaction/object/write/CftNewBizRequest">
   <NBI:Initialize>
    <NBI:Add>
     <NBI:CftNewBizRequest>
      <NBI:Attributes>
       <NBI:Description>' +		DBO.GETHTMLENCODE ( @DESCRIPTION, 0 )	+ '</NBI:Description>
       <NBI:CftSearchReason>' +						@SEARCHREASON		+ '</NBI:CftSearchReason>
       <NBI:Client>' +								@CLIENT				+ '</NBI:Client>
       <NBI:Matter>' +								@MATTER				+ '</NBI:Matter>
	   <NBI:IsCreatedClient>1</NBI:IsCreatedClient>
	   <NBI:IsCreatedMatter>1</NBI:IsCreatedMatter>
	   <NBI:Submitter AliasField="NetworkAlias">' + ISNULL ( @SUBMITTER , 'ERROR' ) + '</NBI:Submitter>
      </NBI:Attributes>
      <NBI:Children>
       <NBI:CftNewBizSearchName>
'

		DECLARE @CFTPARTYTYPE			NVARCHAR ( 20 )
		DECLARE @ENTITY					NVARCHAR ( 10 )	--LENGTH? 
		--ENTITYORG
		DECLARE @COMPANYNAME			NVARCHAR ( 255 )
		--ENTITYPERSON
		DECLARE @FIRSTNAME				NVARCHAR ( 64 )
		DECLARE @MIDDLENAME				NVARCHAR ( 64 )
		DECLARE @LASTNAME				NVARCHAR ( 64 )
		
		--GENERAL
		DECLARE @CFTROLE				NVARCHAR ( 64 )
		DECLARE @CFTRELATIONSHIPCODE	NVARCHAR ( 64 )
		DECLARE @NOTES					NVARCHAR ( 100 )		--APPEND THE EN TEXT FOR THE ASSOCIATE TYPE 
		
		--ASSOC INFO
		DECLARE @ASSOCID				BIGINT 
		DECLARE @CONTID					BIGINT
		DECLARE @ASSOCEXTTXTID			NVARCHAR ( 36 )
		DECLARE @ASSOCORDER				SMALLINT
		
		DECLARE @ISFIRSTSEARCHNAME		BIT = 1					--IF THE FIRST CFTNEWBIZSEARCHNAME, THEN 3E REQUIRES AN EDIT, OTHERWISE IT IS AN ADD

		DECLARE ASSOCIATE_LOOP CURSOR FOR 
		SELECT DISTINCT
			ASSOCID
			, DBCONTACT.CONTID
			, CASE CHARINDEX ( 'GeneralType="Company"' , DBCONTACTTYPE.TYPEXML ) 
				WHEN 0 THEN 'EntityPerson'
				ELSE 'EntityOrg'
			END AS CFTPARTYTYPE
			, CONTEXTID
			, CONTNAME
			, CASE 
					WHEN CHARINDEX ( ' ' , CONTCHRISTIANNAMES ) > 0 
					THEN SUBSTRING ( CONTCHRISTIANNAMES , 0 , CHARINDEX ( ' ' , CONTCHRISTIANNAMES ) ) 
					ELSE CONTCHRISTIANNAMES 
				END AS FIRSTNAME
			, CASE 
				WHEN CHARINDEX  ( ' ' , CONTCHRISTIANNAMES ) = 0 THEN ''
				WHEN CHARINDEX ( ' ' , CONTCHRISTIANNAMES ) > 0 THEN SUBSTRING ( CONTCHRISTIANNAMES , CHARINDEX ( ' ' , CONTCHRISTIANNAMES ) + 1 , LEN ( CONTCHRISTIANNAMES ) ) 
				ELSE CONTCHRISTIANNAMES 
			END AS MIDDLENAME
			, ISNULL ( CONTSURNAME , '' ) AS LASTNAME
			, CASE ISNUMERIC ( DBCLIENTCONTACTS.CLID ) 
				WHEN 1 THEN 'Client'
				ELSE ISNULL ( DBASSOCIATETYPE.TYPEACCCODE , '' ) 
			END AS CFTROLE
			, ISNULL ( DBASSOCIATETYPE.TYPEACCRELATIONSHIPCODE , '' ) AS CFTRELATIONSHIPCODE
			, ASSOCEXTTXTID
			, ASSOCORDER
			, 'MatterSphere Associate Format : ' + DBO.GETCODELOOKUPDESC ( 'SUBASSOC' , DBASSOCIATES.ASSOCTYPE , 'EN' ) AS NOTES
		FROM 
			DBASSOCIATES 
		INNER JOIN 
			DBFILE ON DBFILE.FILEID = DBASSOCIATES.FILEID
		INNER JOIN 
			DBCONTACT ON DBASSOCIATES.CONTID = DBCONTACT.CONTID 
		INNER JOIN 
			DBCONTACTTYPE ON DBCONTACTTYPE.TYPECODE = DBCONTACT.CONTTYPECODE 
		INNER JOIN 
			DBASSOCIATETYPE ON DBASSOCIATETYPE.TYPECODE = DBASSOCIATES.ASSOCTYPE
		LEFT JOIN 
			DBCLIENTCONTACTS ON DBCLIENTCONTACTS.CONTID = DBCONTACT.CONTID AND DBCLIENTCONTACTS.CLID = DBFILE.CLID
		LEFT JOIN 
			DBCONTACTINDIVIDUAL ON DBCONTACTINDIVIDUAL.CONTID = DBCONTACT.CONTID
		WHERE 
			DBASSOCIATES.FILEID = @FILEID AND			--FOR THIS FILE RECORD
			ISNULL ( CONTEXTID , 0 ) > 0 AND			--WHERE THE ENTITY HAS ALREADY BEEN SENT ACROSS SUCCESSFULLY - IE WE HAVE AN ENTITY ID
			ASSOCACTIVE = 1 AND							--ACTIVE ONLY
			DBASSOCIATETYPE.TYPEACCCODE IS NOT NULL		--ALLOWS CONFIGURATION FOR ASSOCIATES NOT TO BE SENT ACROSS TO 3E
		
		OPEN ASSOCIATE_LOOP
		FETCH NEXT FROM ASSOCIATE_LOOP INTO @ASSOCID , @CONTID , @CFTPARTYTYPE , @ENTITY , @COMPANYNAME , @FIRSTNAME , @MIDDLENAME , @LASTNAME , @CFTROLE , @CFTRELATIONSHIPCODE , @ASSOCEXTTXTID , @ASSOCORDER , @NOTES

		WHILE @@FETCH_STATUS = 0
		BEGIN
			
			--IF @SPECIAL IS "0", AND THE ASSOCIATE HAS NOT GOT AN CFTNEWBIZREQUEST GUID ASSOCIATED TO IT,THEN SEND 
			--IF @SPECIAL IS "1" THEN ALWAYS SEND - THIS MEANS WE CAN RE-SEND ALL ASSOCIATES TO 3E
			IF ( @SPECIAL = '0' AND ISNULL ( @ASSOCEXTTXTID , '' ) = '' ) OR ( @SPECIAL = '1' ) 
			BEGIN 
				IF @ASSOCORDER = 0 AND ( SELECT COUNT ( ASSOCID ) FROM DBASSOCIATES WHERE CONTID = @CONTID AND FILEID = @FILEID ) > 1
					GOTO NEXTONE
				IF NOT @IDS = '' SET @IDS = @IDS + ' , '
				SET @IDS = @IDS + CONVERT ( NVARCHAR ( 20 ) , @ASSOCID )
			
				IF @CFTPARTYTYPE = 'EntityOrg' 
				BEGIN
					SET @XML = @XML +  
'        <NBI:%ADD_EDIT%>
         <NBI:CftNewBizSearchName%POSITION_FOR_EDIT%>
          <NBI:Attributes>
           <NBI:CftPartyType>' +					@CFTPARTYTYPE			+ '</NBI:CftPartyType>
           <NBI:Entity>' +							@ENTITY					+ '</NBI:Entity>
		   <NBI:CompanyName>' +	DBO.GETHTMLENCODE ( @COMPANYNAME, 0 )		+ '</NBI:CompanyName>
           <NBI:CftRole>' +		DBO.GETHTMLENCODE ( @CFTROLE, 0 )			+ '</NBI:CftRole>
		   <NBI:CftRelationshipCode>' +				@CFTRELATIONSHIPCODE	+ '</NBI:CftRelationshipCode>
		   <NBI:Notes>' +		DBO.GETHTMLENCODE ( @NOTES, 0 )				+ '</NBI:Notes>
           <NBI:LinkType>Matter</NBI:LinkType>
		   <NBI:IsCreatedEntity>1</NBI:IsCreatedEntity>
          </NBI:Attributes>
         </NBI:CftNewBizSearchName>
        </NBI:%ADD_EDIT%>
'
				END
				ELSE
				BEGIN
					SET @XML = @XML +  
'        <NBI:%ADD_EDIT%>
         <NBI:CftNewBizSearchName%POSITION_FOR_EDIT%>
          <NBI:Attributes>
           <NBI:CftPartyType>' +					@CFTPARTYTYPE			+ '</NBI:CftPartyType>
           <NBI:Entity>' +							@ENTITY					+ '</NBI:Entity>
		   <NBI:FirstName>' +	DBO.GETHTMLENCODE ( @FIRSTNAME, 0 )			+ '</NBI:FirstName>
		   <NBI:MiddleName>' +	DBO.GETHTMLENCODE ( @MIDDLENAME, 0 )		+ '</NBI:MiddleName>
		   <NBI:LastName>' +	DBO.GETHTMLENCODE ( @LASTNAME, 0 )			+ '</NBI:LastName>
           <NBI:CftRole>' +		DBO.GETHTMLENCODE ( @CFTROLE, 0 )			+ '</NBI:CftRole>
		   <NBI:CftRelationshipCode>' +				@CFTRELATIONSHIPCODE	+ '</NBI:CftRelationshipCode>
		   <NBI:Notes>' +		DBO.GETHTMLENCODE ( @NOTES, 0 )				+ '</NBI:Notes>
           <NBI:LinkType>Matter</NBI:LinkType>
		   <NBI:IsCreatedEntity>1</NBI:IsCreatedEntity>
          </NBI:Attributes>
         </NBI:CftNewBizSearchName>
        </NBI:%ADD_EDIT%>
'
				END 

				IF @ISFIRSTSEARCHNAME = 1
				BEGIN
					SET @XML = REPLACE ( @XML , '%ADD_EDIT%' , 'Edit')
					SET @XML = REPLACE ( @XML , '%POSITION_FOR_EDIT%' , ' Position="0"')
					SET @ISFIRSTSEARCHNAME = 0		--NOW DOING ADDS ONLY
				END
				ELSE
				BEGIN
					SET @XML = REPLACE ( @XML , '%ADD_EDIT%' , 'Add')
					SET @XML = REPLACE ( @XML , '%POSITION_FOR_EDIT%' , '')
				END

			END
			
			
			NEXTONE:
			FETCH NEXT FROM ASSOCIATE_LOOP INTO @ASSOCID , @CONTID , @CFTPARTYTYPE , @ENTITY , @COMPANYNAME , @FIRSTNAME , @MIDDLENAME , @LASTNAME , @CFTROLE , @CFTRELATIONSHIPCODE , @ASSOCEXTTXTID , @ASSOCORDER , @NOTES
			
		END 
		
		CLOSE ASSOCIATE_LOOP
		DEALLOCATE ASSOCIATE_LOOP
		
SET @XML = @XML + 
'      </NBI:CftNewBizSearchName>
      </NBI:Children>
     </NBI:CftNewBizRequest>
    </NBI:Add>
   </NBI:Initialize>
  </ns0:CftWFNewBizIntake>
 </process>
 <!--process expectedResult = "Success" expectedResultType = "Int32" keyValue = "Matter" matterSphereUpdate = "UPDATE DBFILE SET FILENEEDEXPORT = 0 WHERE FILEID = ' + CONVERT ( NVARCHAR ( 20 ) , @FILEID ) + '" getProcessResult = "True" >
  <Matter_Srv xmlns="http://elite.com/schemas/transaction/process/write/Matter_Srv" ProxyUser = "uk-3e-demo01\dpereira">
   <Initialize xmlns="http://elite.com/schemas/transaction/object/write/Matter">
    <Edit>
     <Matter KeyValue = "' +                     @MATTER                  + '">
      <Attributes>
       <DisplayName>ALWAYS CHANGE TO THIS!</DisplayName>
      </Attributes>
     </Matter>
    </Edit>
   </Initialize>
  </Matter_Srv>
 </process-->
</processes>'
END 

--IF NO ID'S FOR ASSOCIATES, THEN NOTHING TO SEND
IF @IDS = '' 
	SET @XML = ''
ELSE
	SET @XML = REPLACE ( @XML , '%IDS%' , @IDS ) 

RETURN @XML
END