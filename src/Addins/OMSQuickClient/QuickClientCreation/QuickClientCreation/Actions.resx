<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHx8VVVVVVUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AFWeycnJycpXfFVVVVV8fFUAAKq5uaoAAAAAAAAAAAAArMLDscPEw8XGxse4x8jGVQAAqrm6blFRUQAA
        AAAAAAC7vL2+u6+wsaK1lr+3wMFVAACpqqpuXV1RAAAAAACrm5Wsra6vr7CxsrO0tba3uFUAAFJSUm5e
        Xl+am5yblWmdaY2en6ChnqKjpKWmp6gAAAAAUVFRbn2Hj5CQkIh2kYySiZOUlYGUe5aXmGeZewAAAABk
        ZHtXfYcwfn5/iHSCaWWJiouMjYF7WXR1jnpzXQAAAHtVbnxvfUd+fktLfn5/gHKBgoKCg3gYhISEhYZV
        AAAAbldXWm9vcERBQUQ+cSFyYnN0dXZ3eFh5a2x5elcAAABXWl1aPC5bDxsKGy0TI1VkZWVoaUNqSWtr
        bGxtVQAAAFpbXF1eXl8wVGBgYFRhFmJXW2NkZUJmZ0lmWANZAAAATk9QTlFSUStTVFRUMioqMlVWVlcr
        Qh1NJglYWQAAAAAiS0wEGykrKysrKysrKysrKysrKzJCHAdNTU0AAAAAACJBOgsJEB4eHh4eHh4eHh4e
        Hh4eHj8SKQQwAAAAAAAAIkRIGDMOHR4dHh0dHh0dHh0eHR4dQiASSUoAAAAAAAAiREVGBDURHR0dHR0d
        HR0dHR0dHR0/ECAhBEcAAAAAACJBQkILBy4OHzYgERwpHBwRHBwcHD82NjYGQwAAAAAAIj4/PwcXJAYV
        JwoOLjUgEiASIBIgOB8fH0ACAAAAAAAiNzg5MTg6Bjs7AhcMGzwQECAQEBA4Ew8PDyg9AAAAACIhKjEq
        KjIqKjEqGTMaNDUODx8fNjEODg4OCQIAAAAAIikqKysqKyorKyorKwYXLBkmCi0uEy4uLi4uLzAAAAAi
        IR4dHh0eHR0eHR4dHiUGGAUCBAQYBiYnChMoAQAAACIcHR4dHh0dHh0eHR4dHR4dHh0dGQwBAQEBAQEA
        AAAAIiMdHh0dHh0eEBMjICERHR0eHR4dJAAAAAAAAAAAAAAaGxwdHh0eHREbDAYHGQkJGx8QICEEAAAA
        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
        CQgWAAAAAAAAAAAAAAAAAAAADAcKDQ4PEBESExQVCgUAAAAAAAAAAAAAAAABAQECBBYAAAAAAAAAAAAA
        AAAAAAAAAAQDBQYGBwgJCQoKCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AQEBAQIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///////8AAP//4Af//wAA//+AAP//AAD//4AAAAMAAMB/gAAAAQAAwAeAAAABAADAB4AAAAEAAMAH
        gAAAAQAAwAfAAAADAADAAAAAAAcAAMAAAAAADwAAwAAAAAAfAADAAAAAAB8AAMAAAAAADwAAwAAAAAAH
        AADAAAAAAAcAAMAAAAAABwAAwAAAAAAHAADAAAAAAAcAAMAAAAAABwAAwAAAAAAHAADAAAAAAA8AAMAA
        AAAADwAAwAAAAAAfAADAAAAAAD8AAMAAAAAAPwAAwAAAAAAfAADAAAAAAB8AAMAAAAAADwAAwAAAAAAP
        AADAAAAAAAcAAMAAAAAABwAAwAAAAAAHAADAAAAAAAMAAMAAAAAAAwAAwAAAAAADAADAAAAAAAMAAMAA
        AAAH/wAAwAAAAAf/AADgAAAAB/8AAOAAAAAH/wAA8AAeAAf/AADwAD/8D/8AAPgAf////wAA/8D/////
        AAD///////8AAP///////wAA////////AAA=
</value>
  </data>
</root>